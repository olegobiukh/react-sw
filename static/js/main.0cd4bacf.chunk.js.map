{"version":3,"sources":["api/_helper.js","api/people.js","Common/Pagination/index.js","Common/Pagination/Pagination.js","PeoplePage/index.js","PeoplePage/PeoplePage.js","Page.js","App.js","index.js"],"names":["get","url","arguments","length","undefined","fetch","then","response","json","getAll","_ref","category","_ref$page","page","urlParams","search","URLSearchParams","set","concat","toString","getById","_ref2","_ref2$category","id","Pagination","withRouter","location","count","_ref$perPage","perPage","pagesCount","Math","ceil","pages","i","push","getSearchWithPage","react_default","a","createElement","className","map","Link","key","to","pathname","PeoplePage","state","config","name","title","isSortable","isSearchable","age","snippet","columns","people","isLoaded","loadPeople","_callee","_this$state","regenerator_default","wrap","_context","prev","next","_this","peopleApi","sent","results","setState","stop","this","updatePageFromURL","props","match","params","console","log","_this$state2","Fragment","Common_Pagination","person","NavLink","React","Component","Page","data","_this$props$match$par","Object","keys","includes","App","value","_this2","type","onChange","event","handleFilter","target","defaultChecked","Switch","Route","exact","path","component","ReactDOM","render","BrowserRouter","basename","process","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0cd4bacf.chunk.js","sourcesContent":["const BASE_API_URL = \"https://swapi.co/api\";\n\nexport const get = (url, params = {}) => {\n  return fetch(BASE_API_URL + url).then(response => response.json());\n};\n","import { get } from \"./_helper\";\n\nexport const getAll = ({ category, page = 1, search = \"\" }) => {\n  const urlParams = new URLSearchParams();\n  urlParams.set(\"page\", page);\n  // urlParams.set(\"search\", search);\n\n  return get(`/${category}?${urlParams.toString()}`);\n};\n\nexport const getById = ({ category = \"people\", id }) => {\n  // console.log(id);\n  if (category) {\n    return get(`/${category}/${id}`);\n    // return get(`/people/${id}`);\n  }\n};\n","import Pagination from './Pagination';\nexport default Pagination;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({ location, count, page = 1, perPage = 10 }) => {\n\n  const pagesCount = Math.ceil(count / perPage);\n  const pages = [];\n\n  for (let i = 0; i < pagesCount; i++) {\n    pages.push(i + 1);\n  }\n\n  const getSearchWithPage = (page) => {\n    const urlParams = new URLSearchParams(location.search);\n\n    urlParams.set('page', page);\n\n    return urlParams.toString();\n  };\n\n  return (\n    <div className=\"Pagination\">\n      {pages.map(page => (\n        <Link\n          key={page}\n          to={{\n            pathname: location.pathname,\n            search: getSearchWithPage(page),\n          }}\n        >\n          {page}\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  count: PropTypes.number.isRequired,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n};\n\nexport default withRouter(Pagination);\n","import PeoplePage from './PeoplePage';\nexport default PeoplePage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n// import queryString from \"query-string\";\n\nimport * as peopleApi from \"../api/people\";\nimport Pagination from \"../Common/Pagination\";\n\nclass PeoplePage extends React.Component {\n  state = {\n    config: {\n      name: {\n        title: [\"name\", \"title\"], // в таблице колонка будет так называться\n        isSortable: true, // Поиск будет проверять эту и последнюю колонки\n        isSearchable: true\n      },\n      age: {\n        title: [\n          \"birth_year\",\n          \"diameter\",\n          \"episode_id\",\n          \"average_height\",\n          \"skin_colors\",\n          \"passengers\"\n        ],\n        isSortable: true // по этой колонке можно сортировать\n      },\n      snippet: {\n        // Только для тех ключей которые есть в columnConfig будут колонки в таблице\n        title: [\"gender\", \"terrain\", \"opening_crawl\", \"manufacturer\"],\n        isSearchable: true // В этой колонке тоже будет происходить поиск query\n      }\n    },\n    columns: {\n      people: [\"name\", \"birth_year\", \"gender\"]\n    },\n\n    isLoaded: false,\n    page: 0,\n    count: 0,\n    people: [],\n    category: \"\",\n    search: \"\"\n  };\n\n  componentDidMount() {\n    this.updatePageFromURL();\n  }\n\n  componentDidUpdate() {\n    this.updatePageFromURL();\n  }\n\n  updatePageFromURL() {\n    const { location } = this.props;\n    const urlParams = new URLSearchParams(location.search);\n    const page = +urlParams.get(\"page\") || 1;\n    const category = this.props.match.params.category;\n    console.log(this.props.match);\n    if (category !== this.state.category) {\n      this.setState({ page, category }, this.loadPeople);\n\n      return;\n    }\n\n    if (page === this.state.page) {\n      return;\n    }\n\n    this.setState({ page, category }, this.loadPeople);\n  }\n\n  loadPeople = async () => {\n    const { page, category } = this.state;\n    const { count, results: people } = await peopleApi.getAll({\n      category,\n      page\n    });\n\n    this.setState({\n      people,\n      count,\n      isLoaded: true\n    });\n  };\n\n  render() {\n    const { people, isLoaded, count, page, category } = this.state;\n    return (\n      <div className=\"PeoplePage\">\n        <h1>People page</h1>\n\n        {isLoaded ? (\n          <>\n            <Pagination count={count} page={page} />\n            <ul>\n              {people.map(person => (\n                <li key={person.name || person.title}>\n                  <NavLink to={`./${category}/${person.url.match(/\\d+/g)[0]}`}>\n                    {person.name || person.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ul>\n          </>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PeoplePage;\n","import React, { Component } from \"react\";\nimport * as peopleApi from \"./api/people\";\n\nclass Page extends Component {\n  state = {\n    isLoaded: false,\n    page: 0,\n    count: 0,\n    people: []\n  };\n\n  componentDidMount() {\n    const { category, id } = this.props.match.params;\n    this.loadPeople(category, id);\n  }\n\n  loadPeople = async (category, id) => {\n    const data = await peopleApi.getById({ category, id });\n\n    this.setState({\n      people: data,\n      isLoaded: true\n    });\n  };\n\n  render() {\n    const data = this.state.people;\n    // console.log(data);\n    if (data) {\n      return (\n        <table className=\"table\">\n          <tbody>\n            {Object.keys(data).map(key => {\n              if (\n                data[key].length !== 0 &&\n                !data[key].includes(\"2014\") &&\n                !data[key].includes(\"https\") &&\n                !data[key][0].includes(\"https\")\n              ) {\n                return (\n                  <tr key={key}>\n                    <td>\n                      <b>{key}:</b>\n                    </td>\n                    <td>{data[key]}</td>\n                  </tr>\n                );\n              }\n            })}\n          </tbody>\n        </table>\n      );\n    } else {\n      return <>Loading</>;\n    }\n  }\n}\n\nexport default Page;\n","import React, { Component } from \"react\";\nimport { NavLink, Route, Switch } from \"react-router-dom\";\n\nimport PeoplePage from \"./PeoplePage\";\nimport Page from \"./Page\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    search: \"\"\n  };\n  handleFilter(value, search) {\n    this.setState({ search });\n  }\n  render() {\n    const search = this.state.search;\n    // console.log(typeof search);\n\n    return (\n      <div className=\"App\">\n        <h1>Star Wars</h1>\n        <input\n          className=\"Query\"\n          type=\"text\"\n          onChange={event => {\n            this.handleFilter(\"query\", event.target.value);\n          }}\n          defaultChecked\n        />\n        <NavLink to={{ pathname: \"/people\", search: search }}>People</NavLink>\n        <NavLink to={{ pathname: \"/planets\", search: `?search=${search}` }}>\n          Planets\n        </NavLink>\n        <NavLink to={{ pathname: \"/species\", search: `?search=${search}` }}>\n          Species\n        </NavLink>\n        <NavLink to={{ pathname: \"/vehicles\", search: `?search=${search}` }}>\n          Vehicles\n        </NavLink>\n        <NavLink\n          to={{\n            pathname: \"/starships\",\n            search: `?search=${search}`\n          }}\n        >\n          Starships\n        </NavLink>\n        <section>\n          <Switch>\n            <Route exact path=\"/:category\" component={PeoplePage} />\n            <Route exact path=\"/:category/:id\" component={Page} />\n          </Switch>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}